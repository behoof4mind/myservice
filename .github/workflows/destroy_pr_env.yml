on:
  pull_request:
    types: [closed]

name: Destroy PR Env
jobs:
  destroy_pr_env:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      BRANCH_NAME: ${{ github.head_ref }}
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.8
      - uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'test'
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=terraform-my-service-state" -backend-config="key=terraform-test.tfstate" -backend-config="dynamodb_table=terraform-my-service-state-test" -backend-config="encrypt=true"
        working-directory: ./terraform
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy
        working-directory: ./terraform
      - uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Temporary environment now destroyed

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
